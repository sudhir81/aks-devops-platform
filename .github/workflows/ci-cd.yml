name: üöÄ AKS DevOps CI/CD

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: sample-app
      CHART_PATH: charts/sample-app
      RELEASE_NAME: sample-app
      K8S_NAMESPACE: default
      ENV_PATH: envs/dev

      # üîê Terraform + OIDC Auth
      ARM_USE_OIDC: true
      ARM_SKIP_CLI_CREDENTIAL: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üîê Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: üß± Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: üß™ Verify Terraform environment
        run: |
          echo "ARM_CLIENT_ID=$ARM_CLIENT_ID"
          echo "ARM_TENANT_ID=$ARM_TENANT_ID"
          echo "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID"
          echo "ARM_USE_OIDC=$ARM_USE_OIDC"
          echo "ARM_SKIP_CLI_CREDENTIAL=$ARM_SKIP_CLI_CREDENTIAL"

      - name: ‚öôÔ∏è Terraform Init
        run: terraform -chdir=${{ env.ENV_PATH }} init -input=false

      - name: ü™Ñ Terraform Plan
        run: terraform -chdir=${{ env.ENV_PATH }} plan -var-file=dev.tfvars

      # Optional Apply ‚Äî comment out in PR mode
      - name: üöÄ Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform -chdir=${{ env.ENV_PATH }} apply -var-file=dev.tfvars -auto-approve

      - name: üê≥ Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: üèóÔ∏è Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: ‚ò∏Ô∏è Get AKS Credentials
        uses: azure/aks-set-context@v2
        with:
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

      - name: ‚õµ Helm Upgrade/Install
        run: |
          helm upgrade --install $RELEASE_NAME $CHART_PATH \
            --namespace $K8S_NAMESPACE \
            --set image.repository=${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }} \
            --set image.tag=${{ github.sha }} \
            --wait
