name: CI/CD

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      IMAGE_NAME: sample-app
      CHART_PATH: charts/sample-app
      RELEASE_NAME: sample-app
      K8S_NAMESPACE: default
      ENV_PATH: envs/dev
      ARM_USE_OIDC: true
      ARM_SKIP_CLI_CREDENTIAL: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: üßæ Checkout
        uses: actions/checkout@v4

      - name: üîê Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: üß± Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: ‚öôÔ∏è Terraform Init
        working-directory: ${{ env.ENV_PATH }}
        run: |
          echo "ARM_CLIENT_ID=$ARM_CLIENT_ID"
          echo "ARM_TENANT_ID=$ARM_TENANT_ID"
          echo "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID"
          terraform init -input=false

      - name: üßÆ Terraform Plan
        working-directory: ${{ env.ENV_PATH }}
        run: terraform plan -var-file=dev.tfvars

      - name: üöÄ Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ env.ENV_PATH }}
        run: terraform apply -var-file=dev.tfvars -auto-approve

